{"version":3,"file":"static/js/691.fce34f56.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  list-style: none;\n`;\n\nexport const PhotoCard = styled.li`\n  position: relative;\n  display: block;\n  width: 100%;\n  cursor: pointer;\n  transition: filter 300ms ease-in-out;\n  &:hover,\n  &:focus {\n    filter: drop-shadow(1px 1px 15px black);\n  }\n  width: calc((100% - 32px) / 3);\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 5px;\n  width: 100%;\n  height: auto;\n\n  object-fit: cover;\n  transition: filter 300ms ease-in-out;\n\n  max-width: 395px;\n  height: 575px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding-bottom: 16px;\n  padding-top: 12px;\n`;\n\nexport const MovieName = styled.p`\n  font-family: inherit;\n  font-weight: 500;\n\n  font-size: 19.5px;\n  line-height: 1.2;\n`;\n\nexport const MovieTitle = styled.h1`\n  text-align: center;\n`;","import styled from 'styled-components';\n\n\n// export const SearchHeader = styled.header`\n//   top: 0;\n//   left: 0;\n//   position: sticky;\n//   z-index: 1100;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   min-height: 64px;\n//   padding-right: 24px;\n//   padding-left: 24px;\n//   padding-top: 12px;\n//   padding-bottom: 12px;\n//   color: #fff;\n// `;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  background-color: #aaa5dd;\n  border-radius: 8px;\n  \n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 35px;\n  background-color: #aaa5dd;  \n  border: none;\n\n  outline-color: aliceblue;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 25px;\n    \n  }\n  \n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  // background-color: #aaa5dd;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { MdPageview  } from 'react-icons/md';\nimport { fetchSearchFilm } from 'services/fetchApi';\nimport { \n  SearchFormInput, \n  SearchButton, \n  SearchForm } from './Movies.styled';\nimport {\n  MovieName,\n  GalleryList,\n  MovieImage,\n  MovieInfo,\n  PhotoCard,\n} from '../Home/Home.styled';\n\n\nconst Movies = () => {\n\n  const [event, setEvent] = useState([]);\n  const [search, setSearchParams] = useSearchParams();\n\n  const filmName = search.get('query');\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const noImagePoster =\n    'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (search === null || search === '') return;\n    fetchSearchFilm(filmName).then(setEvent);\n  }, [search, filmName]);\n\n  \n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n  \n    const form = e.target;\n    setSearchParams({ query: e.target.elements.query.value });\n    form.reset();\n\n  };\n\n  return (\n    <>\n      <SearchForm action=\"\" onSubmit={handleSubmit}>\n        <SearchFormInput\n          name=\"query\"\n          color=\"secondary\"\n          id=\"outlined-basic\"\n          label=\"Search Film\"\n          variant=\"outlined\"\n          placeholder=\"Search film\"\n        />\n\n        <SearchButton type=\"submit\" variant=\"outlined\" size=\"medium\" sx={{ ml: 2 }}>\n          <MdPageview  style={{ width: 30, height: 30 }} />\n        </SearchButton>\n      </SearchForm>\n      \n      {event && (\n        <GalleryList>\n          {event.map(el => {\n            return (\n              <PhotoCard key={el.id}>\n                <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                  <MovieImage\n                    src={\n                      el.poster_path ? baseURL + el.poster_path : noImagePoster\n                    }\n                    alt=\"\"\n                    width=\"500\"\n                    height=\"750\"\n                  />\n                  <MovieInfo>\n                    <MovieName>{el.title ? el.title : el.name}</MovieName>\n                  </MovieInfo>\n                </Link>\n              </PhotoCard>\n            );\n          })}\n        </GalleryList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\n\n","import axios from 'axios';\n\nconst KEY = 'f2d00b13296250bbaa36e82e90ab2e9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingFilms() {\n  const data = await axios('trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.data.results;\n}\n\nexport async function fetchFilmById(id) {\n  const data = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\nexport async function fetchFilmReviews(id) {\n  const data = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchFilmCredits(id) {\n  const data = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchSearchFilm(query) {\n  const data = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.data.results;\n}"],"names":["GalleryList","styled","PhotoCard","MovieImage","MovieInfo","MovieName","MovieTitle","SearchForm","SearchFormInput","SearchButton","useState","event","setEvent","useSearchParams","search","setSearchParams","filmName","get","location","useLocation","useEffect","fetchSearchFilm","then","action","onSubmit","e","preventDefault","form","target","query","elements","value","reset","name","color","id","label","variant","placeholder","type","size","sx","ml","style","width","height","map","el","to","state","from","src","poster_path","alt","title","KEY","fetchTrendingFilms","axios","params","api_key","data","results","fetchFilmById","fetchFilmReviews","fetchFilmCredits","language","page"],"sourceRoot":""}