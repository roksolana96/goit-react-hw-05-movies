{"version":3,"file":"static/js/565.f460745e.chunk.js","mappings":"wPAEaA,EAAWC,EAAAA,QAAAA,GAAH,iFAMRC,EAAWD,EAAAA,QAAAA,GAAH,kEAKRE,EAAUF,EAAAA,QAAAA,IAAH,kE,SCmCpB,EAxCa,WACX,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAASM,EAAKC,KAAlB,GACpC,GAAE,CAACN,EAASD,KAGX,8BACoB,IAAjBD,EAAMS,QACL,SAACd,EAAD,UACGK,EAAMU,KAAI,SAAAC,GACT,OACE,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IACED,EAAGE,aAlBL,mCAkB8BF,EAAGE,aAhB/C,+EAkBcC,IAAI,GACJC,MAAM,SAER,4BACE,0BAAI,UAAQJ,EAAGK,SACf,0BAAI,cAAYL,EAAGM,kBAVRN,EAAGO,GAcrB,OAGH,uBAAG,0BAIV,C,kMC5CKC,EAAM,mCAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACcC,EAAAA,EAAAA,GAAM,mBAAoB,CAC3CC,OAAQ,CACNC,QAASJ,KAHR,cACCZ,EADD,yBAMEA,EAAKA,KAAKiB,SANZ,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BP,GAA7B,wFACcG,EAAAA,EAAAA,GAAM,SAAD,OAAUH,GAAM,CACtCI,OAAQ,CACNC,QAASJ,KAHR,cACCZ,EADD,yBAOEA,EAAKA,MAPP,kEASA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCR,GAAhC,wFACcG,EAAAA,EAAAA,GAAM,SAAD,OAAUH,EAAV,YAAwB,CAC9CI,OAAQ,CACNC,QAASJ,KAHR,cACCZ,EADD,yBAOEA,EAAKA,MAPP,kEAUA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAgCa,GAAhC,wFACcG,EAAAA,EAAAA,GAAM,SAAD,OAAUH,EAAV,YAAwB,CAC9CI,OAAQ,CACNC,QAASJ,KAHR,cACCZ,EADD,yBAOEA,EAAKA,MAPP,kEAUA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACcP,EAAAA,EAAAA,GAAM,eAAgB,CACvCC,OAAQ,CACNC,QAASJ,EACTS,MAAOA,EACPC,SAAU,QACVC,KAAM,KANL,cACCvB,EADD,yBAUEA,EAAKA,KAAKiB,SAVZ,kEAxCPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 25px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  margin-right: 15px;\n`;","import { fetchFilmCredits } from 'services/fetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { \n  CastImg, \n  CastItem, \n  CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [event, setEvent] = useState([]);\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const noImagePoster =\n    'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchFilmCredits(movieId).then(data => setEvent(data.cast));\n  }, [movieId, setEvent]);\n\n  return (\n    <>\n      {event.length !== 0 ? (\n        <CastList>\n          {event.map(el => {\n            return (\n              <CastItem key={el.id}>\n                <CastImg\n                  src={\n                    el.profile_path ? baseURL + el.profile_path : noImagePoster\n                  }\n                  alt=\"\"\n                  width=\"142\"\n                />\n                <div>\n                  <h2>Actor: {el.name}</h2>\n                  <h2>Character: {el.character}</h2>\n                </div>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      ) : (\n        <p>There are no reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst KEY = 'f2d00b13296250bbaa36e82e90ab2e9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingFilms() {\n  const data = await axios('trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.data.results;\n}\n\nexport async function fetchFilmById(id) {\n  const data = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\nexport async function fetchFilmReviews(id) {\n  const data = await axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchFilmCredits(id) {\n  const data = await axios(`movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.data;\n}\n\nexport async function fetchSearchFilm(query) {\n  const data = await axios(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return data.data.results;\n}"],"names":["CastList","styled","CastItem","CastImg","useState","event","setEvent","movieId","useParams","useEffect","fetchFilmCredits","then","data","cast","length","map","el","src","profile_path","alt","width","name","character","id","KEY","fetchTrendingFilms","axios","params","api_key","results","fetchFilmById","fetchFilmReviews","fetchSearchFilm","query","language","page"],"sourceRoot":""}